@page "/tickets/create"
@using EnterpriseTicketing.Components.Auth
@using EnterpriseTicketing.Data
@inject ApplicationDbContext Context
@inject IUserSessionService SessionService
@inject NavigationManager Navigation
@rendermode InteractiveServer

<PageTitle>ایجاد تیکت - سیستم تیکتینگ سازمانی</PageTitle>

<CustomAuthorizeView>
    <div class="container-fluid">
        <div class="row mb-4">
            <div class="col">
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a href="/tickets">تیکت‌های من</a></li>
                        <li class="breadcrumb-item active">ایجاد تیکت جدید</li>
                    </ol>
                </nav>
                <h1 class="h3 mb-3">
                    <i class="bi bi-plus-circle"></i>
                    ایجاد تیکت جدید
                </h1>
            </div>
        </div>

        <div class="row">
            <div class="col-md-8">
                <div class="card">
                    <div class="card-body">
                        <EditForm Model="@ticketModel" OnValidSubmit="@HandleSubmit" FormName="CreateTicketForm">
                            <DataAnnotationsValidator />
                            
                            @if (!string.IsNullOrEmpty(errorMessage))
                            {
                                <div class="alert alert-danger" role="alert">
                                    <i class="bi bi-exclamation-triangle-fill"></i> @errorMessage
                                </div>
                            }

                            <div class="row">
                                <div class="col-md-8">
                                    <div class="mb-3">
                                        <label for="title" class="form-label">عنوان <span class="text-danger">*</span></label>
                                        <InputText @bind-Value="ticketModel.Title" class="form-control" id="title" placeholder="توضیح مختصری از مشکل" />
                                        <ValidationMessage For="@(() => ticketModel.Title)" class="text-danger" />
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="mb-3">
                                        <label for="category" class="form-label">دسته‌بندی</label>
                                        <InputSelect @bind-Value="ticketModel.Category" class="form-select" id="category">
                                            <option value="@TicketCategory.General">عمومی</option>
                                            <option value="@TicketCategory.Hardware">سخت‌افزار</option>
                                            <option value="@TicketCategory.Software">نرم‌افزار</option>
                                            <option value="@TicketCategory.Network">شبکه</option>
                                            <option value="@TicketCategory.Security">امنیت</option>
                                            <option value="@TicketCategory.Account">حساب کاربری</option>
                                        </InputSelect>
                                        <ValidationMessage For="@(() => ticketModel.Category)" class="text-danger" />
                                    </div>
                                </div>
                            </div>

                            <div class="mb-3">
                                <label for="priority" class="form-label">اولویت</label>
                                <InputSelect @bind-Value="ticketModel.Priority" class="form-select" id="priority">
                                    <option value="@TicketPriority.Low">کم - سوال عمومی یا مشکل جزئی</option>
                                    <option value="@TicketPriority.Medium">متوسط - مشکل استاندارد که بر بهره‌وری تأثیر می‌گذارد</option>
                                    <option value="@TicketPriority.High">زیاد - مشکل فوری که روی چندین کاربر تأثیر می‌گذارد</option>
                                    <option value="@TicketPriority.Critical">بحرانی - سیستم قطع یا مشکل امنیتی</option>
                                </InputSelect>
                                <ValidationMessage For="@(() => ticketModel.Priority)" class="text-danger" />
                            </div>

                            <div class="mb-3">
                                <label for="description" class="form-label">توضیحات <span class="text-danger">*</span></label>
                                <InputTextArea @bind-Value="ticketModel.Description" class="form-control" id="description" rows="6" 
                                             placeholder="اطلاعات تفصیلی درباره مشکل، شامل مراحل بازتولید، پیام‌های خطا و هر متن مرتبط دیگری ارائه دهید" />
                                <ValidationMessage For="@(() => ticketModel.Description)" class="text-danger" />
                                <div class="form-text">تا حد امکان دقیق باشید تا تیم پشتیبانی ما بتواند مشکل شما را سریع حل کند.</div>
                            </div>

                            <div class="d-flex justify-content-between">
                                <a href="/tickets" class="btn btn-outline-secondary">
                                    <i class="bi bi-arrow-right"></i> بازگشت به تیکت‌ها
                                </a>
                                <button type="submit" class="btn btn-primary" disabled="@isSubmitting">
                                    @if (isSubmitting)
                                    {
                                        <span class="spinner-border spinner-border-sm me-2" role="status"></span>
                                        <span>در حال ایجاد...</span>
                                    }
                                    else
                                    {
                                        <i class="bi bi-check-circle"></i>
                                        <span>ایجاد تیکت</span>
                                    }
                                </button>
                            </div>
                        </EditForm>
                    </div>
                </div>
            </div>

            <div class="col-md-4">
                <div class="card">
                    <div class="card-header">
                        <h5 class="mb-0">
                            <i class="bi bi-info-circle"></i>
                            نکاتی برای ایجاد تیکت مفید
                        </h5>
                    </div>
                    <div class="card-body">
                        <ul class="list-unstyled">
                            <li class="mb-2">
                                <i class="bi bi-check-circle text-success"></i>
                                از عنوان واضح و توصیفی استفاده کنید
                            </li>
                            <li class="mb-2">
                                <i class="bi bi-check-circle text-success"></i>
                                مراحل بازتولید مشکل را شامل کنید
                            </li>
                            <li class="mb-2">
                                <i class="bi bi-check-circle text-success"></i>
                                پیام‌های خطا را ذکر کنید
                            </li>
                            <li class="mb-2">
                                <i class="bi bi-check-circle text-success"></i>
                                اولویت مناسب را انتخاب کنید
                            </li>
                            <li class="mb-2">
                                <i class="bi bi-check-circle text-success"></i>
                                دسته‌بندی صحیح را انتخاب کنید
                            </li>
                        </ul>
                        
                        <hr />
                        
                        <h6>راهنمای اولویت:</h6>
                        <small class="text-muted">
                            <strong>بحرانی:</strong> قطعی سیستم، نقض امنیت<br />
                            <strong>زیاد:</strong> مسائل فوری که روی چندین کاربر تأثیر می‌گذارد<br />
                            <strong>متوسط:</strong> مسائل استاندارد که بر بهره‌وری تأثیر می‌گذارد<br />
                            <strong>کم:</strong> سوالات عمومی، مسائل جزئی
                        </small>
                    </div>
                </div>
            </div>
        </div>
    </div>
</CustomAuthorizeView>

@code {
    private CreateTicketModel ticketModel = new();
    private string errorMessage = string.Empty;
    private bool isSubmitting = false;
    private User? currentUser;

    protected override async Task OnInitializedAsync()
    {
        currentUser = await SessionService.GetCurrentUserAsync();
        
        if (currentUser == null)
        {
            Navigation.NavigateTo("/login", true);
            return;
        }
    }

    private async Task HandleSubmit()
    {
        try
        {
            isSubmitting = true;
            errorMessage = string.Empty;
            StateHasChanged();

            if (currentUser == null)
            {
                Navigation.NavigateTo("/login", true);
                return;
            }

            var ticket = new Ticket
            {
                Title = ticketModel.Title,
                Description = ticketModel.Description,
                Priority = ticketModel.Priority,
                Category = ticketModel.Category,
                Status = TicketStatus.Open,
                CreatedById = currentUser.Id,
                CreatedAt = DateTime.UtcNow,
                UpdatedAt = DateTime.UtcNow
            };

            Context.Tickets.Add(ticket);
            await Context.SaveChangesAsync();

            // Add system message for ticket creation
            var systemMessage = new ChatMessage
            {
                Message = $"Ticket created by {currentUser.FirstName} {currentUser.LastName}",
                TicketId = ticket.Id,
                SenderId = currentUser.Id,
                SentAt = DateTime.UtcNow,
                IsSystemMessage = true
            };

            Context.ChatMessages.Add(systemMessage);
            await Context.SaveChangesAsync();

            Navigation.NavigateTo($"/tickets/{ticket.Id}", false);
        }
        catch (Exception ex)
        {
            errorMessage = "An error occurred while creating the ticket. Please try again.";
            // Log the exception in a real application
            Console.WriteLine($"Error creating ticket: {ex.Message}");
        }
        finally
        {
            isSubmitting = false;
            StateHasChanged();
        }
    }

    public class CreateTicketModel
    {
        [Required(ErrorMessage = "Title is required")]
        [StringLength(255, ErrorMessage = "Title cannot exceed 255 characters")]
        public string Title { get; set; } = string.Empty;

        [Required(ErrorMessage = "Description is required")]
        [StringLength(4000, ErrorMessage = "Description cannot exceed 4000 characters")]
        public string Description { get; set; } = string.Empty;

        public TicketPriority Priority { get; set; } = TicketPriority.Medium;
        public TicketCategory Category { get; set; } = TicketCategory.General;
    }
}
